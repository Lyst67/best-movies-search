{"version":3,"file":"static/js/332.5800d33f.chunk.js","mappings":"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","sources":["API.js","webpack://best-movies-search/./src/components/MoviesList/Movielist.module.css?3ec5","components/MoviesList/MoviesList.jsx","webpack://best-movies-search/./src/pages/Movies/Movies.module.css?82ee","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst OPTIONS = {\n  method: 'GET',\n  options: { language: 'en-US' },\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1OTI3MGJmODZhYjExZTBjY2FmN2YzOGVmMWQ5OWIyZCIsInN1YiI6IjY0YzI0OTY5MmYxYmUwMDE0ZWY2NGE1ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.p5RUI4QQa76RdjJg1YwJtQVcsEnpw3DEDCBEkEwrDLQ',\n  },\n};\nexport const refs = {\n  baseUrl: 'https://image.tmdb.org/t/p/w500/',\n  defaultImg:\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700',\n};\n\nexport const getTodaysTrending = async () => {\n  const options = OPTIONS;\n  const responce = await axios.get(`trending/movie/day`, options);\n  const data = responce.data;\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const options = OPTIONS;\n  const responce = await axios(`movie/${movieId}`, options);\n  const movieDelails = responce.data;\n  return movieDelails;\n};\n\nexport const getMoviesBySearch = async query => {\n  const options = OPTIONS;\n  const responce = await axios(`search/movie?query=${query}`, options);\n  const moviesBySearch = responce.data;\n  return moviesBySearch;\n};\n\nexport const getMovieCredits = async movieId => {\n  const options = OPTIONS;\n  const responce = await axios(`movie/${movieId}/credits?`, options);\n  const moviesCredits = responce.data;\n  return moviesCredits;\n};\n\nexport const getMovieReviews = async movieId => {\n  const options = OPTIONS;\n  const responce = await axios(`movie/${movieId}/reviews?`, options);\n  const moviesReviews = responce.data;\n  return moviesReviews;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list_item\":\"Movielist_list_item__WfAtn\",\"list_link\":\"Movielist_list_link__HhEdJ\"};","import { Link, useLocation } from \"react-router-dom\"\nimport css from './Movielist.module.css'\n\nconst MoviesList = ({ movies }) => {\n    const location = useLocation()\n    return (\n        <ul>\n            {movies.map(({ id, title }) => {\n                return <li className={css.list_item} key={id}><Link className={css.list_link} to={`/movies/${id}`} state={{ from: location }}>{title}</Link></li>\n            })}\n                    \n        </ul>\n    )\n};\nexport default MoviesList;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__+-Cnt\",\"form_thumb\":\"Movies_form_thumb__dXKeb\",\"form\":\"Movies_form__4ow+Z\",\"input\":\"Movies_input__KrUqs\",\"form_btn\":\"Movies_form_btn__WLFwl\"};","import { useState } from \"react\";\nimport css from '../../pages/Movies/Movies.module.css'\n\n const SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState(\"\")\n    \n  const handleChange = ({ target: { value } }) => {\n    setQuery(value)\n  }\n\n  const handleSubmitSearch = (event) => {\n    event.preventDefault()\n    if (query === \"\") {\n      alert(\"Fill in the field, please!\")\n      return\n    }\n    onSubmit(query.toLowerCase().trim())\n  }\n\n  return (\n    <form className={css.form} onSubmit={handleSubmitSearch}>\n      <input className={css.input} type=\"text\" onChange={handleChange}></input>\n      <button className={css.form_btn} type=\"submit\">Search</button>\n    </form>\n  )\n};\nexport default SearchForm;","import SearchForm from \"components/SearchForm/SearchForm\"\nimport React, { useEffect, useState } from \"react\"\nimport { useSearchParams } from \"react-router-dom\"\nimport { getMoviesBySearch } from \"API\"\nimport MoviesList from \"components/MoviesList/MoviesList\"\nimport css from './Movies.module.css'\n\nconst Movies = () => {\n    const [searcedMovies, setSearcedMovies] = useState([])\n    const [error, setError] = useState(false)\n    const [searchParams, setSearchParams] = useSearchParams()\n    const query = searchParams.get(\"query\") ?? \"\"\n\n    const hahdlesetSearchMovies = (value) => {\n        setSearchParams({ query: value })\n    }\n\n    useEffect(() => {\n        if (query === \"\") {\n            return\n        }\n        async function fetchMoviesBySearch() {\n            setSearcedMovies([])\n            setError(false)\n            try {\n                const movies = await getMoviesBySearch(query)\n                if (!movies.results.length) {\n                    alert('Opps! There are no movies for your request! Please try again!');\n                    return;\n                }\n                setSearcedMovies(movies.results)\n            } catch (error) { setError(error.response.data); }\n        }\n        fetchMoviesBySearch()\n    }, [query])\n\n    return (\n        <div className={css.container}>\n            <div className={css.form_thumb}>\n                <SearchForm onSubmit={hahdlesetSearchMovies} />\n            </div>\n            \n            <div>\n                {error && <h1>{error}</h1>}\n                <MoviesList movies={searcedMovies} />\n            </div>\n        </div>\n    )\n};\nexport default Movies;"],"names":["axios","OPTIONS","method","options","language","headers","accept","Authorization","refs","baseUrl","defaultImg","getTodaysTrending","responce","data","getMovieDetails","movieId","movieDelails","getMoviesBySearch","query","moviesBySearch","getMovieCredits","moviesCredits","getMovieReviews","moviesReviews","movies","location","useLocation","map","id","title","className","css","to","state","from","onSubmit","useState","setQuery","event","preventDefault","toLowerCase","trim","alert","type","onChange","value","target","searcedMovies","setSearcedMovies","error","setError","useSearchParams","searchParams","setSearchParams","get","useEffect","results","length","response","fetchMoviesBySearch","MoviesList"],"sourceRoot":""}