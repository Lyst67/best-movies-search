{"version":3,"file":"static/js/168.86537b75.chunk.js","mappings":"uUAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CAAEC,SAAU,SACrBC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAGOC,EAAO,CAClBC,QAAS,mCACTC,WACE,+EAGSC,EAAiB,mCAAG,+FACzBR,EAAUF,EADe,SAERD,EAAAA,EAAAA,IAAA,qBAAgCG,GAFxB,cAEzBS,EAFyB,OAGzBC,EAAOD,EAASC,KAHS,kBAIxBA,GAJwB,2CAAH,qDAOjBC,EAAe,mCAAG,WAAMC,GAAN,kFACvBZ,EAAUF,EADa,UAEND,EAAAA,EAAAA,GAAM,SAAD,OAAUe,GAAWZ,GAFpB,cAEvBS,EAFuB,OAGvBI,EAAeJ,EAASC,KAHD,kBAItBG,GAJsB,2CAAH,sDAOfC,EAAiB,mCAAG,WAAMC,GAAN,kFACzBf,EAAUF,EADe,UAERD,EAAAA,EAAAA,GAAM,sBAAD,OAAuBkB,GAASf,GAF7B,cAEzBS,EAFyB,OAGzBO,EAAiBP,EAASC,KAHD,kBAIxBM,GAJwB,2CAAH,sDAOjBC,EAAe,mCAAG,WAAML,GAAN,kFACvBZ,EAAUF,EADa,UAEND,EAAAA,EAAAA,GAAM,SAAD,OAAUe,EAAV,aAA8BZ,GAF7B,cAEvBS,EAFuB,OAGvBS,EAAgBT,EAASC,KAHF,kBAItBQ,GAJsB,2CAAH,sDAOfC,EAAe,mCAAG,WAAMP,GAAN,kFACvBZ,EAAUF,EADa,UAEND,EAAAA,EAAAA,GAAM,SAAD,OAAUe,EAAV,aAA8BZ,GAF7B,cAEvBS,EAFuB,OAGvBW,EAAgBX,EAASC,KAHF,kBAItBU,GAJsB,2CAAH,qD,sIC9C5B,EAA4B,2B,SCkC5B,EA9BgB,WACZ,OAA0BC,EAAAA,EAAAA,WAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQb,GAAYc,EAAAA,EAAAA,MAAZd,QAiBR,OAfAe,EAAAA,EAAAA,YAAU,WAAM,wCAIZ,2FACIF,EAAW,IACXF,GAAS,GAFb,mBAI6BJ,EAAAA,EAAAA,IAAgBP,GAJ7C,OAIcgB,EAJd,OAKQH,EAAWG,EAAOC,SAL1B,gDAMsBN,EAAS,KAAMO,SAASpB,MAN9C,0DAJY,sBACPE,GADO,mCAYZmB,EACH,GAAE,CAACnB,KAGA,iBAAKoB,UAAWC,EAAhB,UACKX,IAAS,wBAAKA,IACbE,EAAQU,QAA8D,wBACnEV,EAAQW,KAAI,WAAsBC,GAAtB,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OAAiC,2BAAgB,0BAAI,UAAQD,MACtE,uBAAIC,KAAY,oBADmCF,EAA1C,OADE,wBAAI,gDAMlC,C","sources":["API.js","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst OPTIONS = {\n  method: 'GET',\n  options: { language: 'en-US' },\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1OTI3MGJmODZhYjExZTBjY2FmN2YzOGVmMWQ5OWIyZCIsInN1YiI6IjY0YzI0OTY5MmYxYmUwMDE0ZWY2NGE1ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.p5RUI4QQa76RdjJg1YwJtQVcsEnpw3DEDCBEkEwrDLQ',\n  },\n};\nexport const refs = {\n  baseUrl: 'https://image.tmdb.org/t/p/w500/',\n  defaultImg:\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700',\n};\n\nexport const getTodaysTrending = async () => {\n  const options = OPTIONS;\n  const responce = await axios.get(`trending/movie/day`, options);\n  const data = responce.data;\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const options = OPTIONS;\n  const responce = await axios(`movie/${movieId}`, options);\n  const movieDelails = responce.data;\n  return movieDelails;\n};\n\nexport const getMoviesBySearch = async query => {\n  const options = OPTIONS;\n  const responce = await axios(`search/movie?query=${query}`, options);\n  const moviesBySearch = responce.data;\n  return moviesBySearch;\n};\n\nexport const getMovieCredits = async movieId => {\n  const options = OPTIONS;\n  const responce = await axios(`movie/${movieId}/credits?`, options);\n  const moviesCredits = responce.data;\n  return moviesCredits;\n};\n\nexport const getMovieReviews = async movieId => {\n  const options = OPTIONS;\n  const responce = await axios(`movie/${movieId}/reviews?`, options);\n  const moviesReviews = responce.data;\n  return moviesReviews;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Reviews_container__2j80+\"};","import { getMovieReviews } from \"API\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport css from './Reviews.module.css'\n\nconst Reviews = () => {\n    const [error, setError] = useState(false)\n    const [reviews, setReviews] = useState([])\n    const { movieId } = useParams()\n\n    useEffect(() => {\n        if (!movieId) {\n            return\n        }\n        async function fetchMovie() {\n            setReviews([])\n            setError(false)\n            try {\n                const review = await getMovieReviews(movieId)\n                setReviews(review.results)\n            } catch (error) { setError(error.response.data); } \n        }\n        fetchMovie()\n    }, [movieId])\n\n    return (\n        <div className={css.container}>\n            {error && <h3>{error}</h3>}\n            {!reviews.length ? <h3>We don't have any reviews for this movie.</h3> : <ul> \n                {reviews.map(({ author, content }, index) => (<li key={index}><h3>Autor: {author}</h3>\n                    <p>{content}</p><hr /></li>))}\n            </ul>}\n        </div>   \n    )\n};\nexport default Reviews;"],"names":["axios","OPTIONS","method","options","language","headers","accept","Authorization","refs","baseUrl","defaultImg","getTodaysTrending","responce","data","getMovieDetails","movieId","movieDelails","getMoviesBySearch","query","moviesBySearch","getMovieCredits","moviesCredits","getMovieReviews","moviesReviews","useState","error","setError","reviews","setReviews","useParams","useEffect","review","results","response","fetchMovie","className","css","length","map","index","author","content"],"sourceRoot":""}