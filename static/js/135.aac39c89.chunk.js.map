{"version":3,"file":"static/js/135.aac39c89.chunk.js","mappings":"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","sources":["API.js","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst OPTIONS = {\n  method: 'GET',\n  options: { language: 'en-US' },\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1OTI3MGJmODZhYjExZTBjY2FmN2YzOGVmMWQ5OWIyZCIsInN1YiI6IjY0YzI0OTY5MmYxYmUwMDE0ZWY2NGE1ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.p5RUI4QQa76RdjJg1YwJtQVcsEnpw3DEDCBEkEwrDLQ',\n  },\n};\nexport const refs = {\n  baseUrl: 'https://image.tmdb.org/t/p/w500/',\n  defaultImg:\n    '<https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700>',\n};\n\nexport const getTodaysTrending = async () => {\n  const options = OPTIONS;\n  const responce = await axios.get(`trending/movie/day`, options);\n  const data = responce.data;\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const options = OPTIONS;\n  const responce = await axios(`movie/${movieId}`, options);\n  const movieDelails = responce.data;\n  return movieDelails;\n};\n\nexport const getMoviesBySearch = async query => {\n  const options = OPTIONS;\n  const responce = await axios(`search/movie?query=${query}`, options);\n  const moviesBySearch = responce.data;\n  return moviesBySearch;\n};\n\nexport const getMovieCredits = async movieId => {\n  const options = OPTIONS;\n  const responce = await axios(`movie/${movieId}/credits?`, options);\n  const moviesCredits = responce.data;\n  return moviesCredits;\n};\n\nexport const getMovieReviews = async movieId => {\n  const options = OPTIONS;\n  const responce = await axios(`movie/${movieId}/reviews?`, options);\n  const moviesReviews = responce.data;\n  return moviesReviews;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__Ys+c9\",\"back_btn\":\"MovieDetails_back_btn__MjQ9i\",\"movie_card\":\"MovieDetails_movie_card__9W8gh\",\"imgbox\":\"MovieDetails_imgbox__HndFL\",\"img\":\"MovieDetails_img__uOAom\",\"movie_info\":\"MovieDetails_movie_info__MBcuN\",\"title\":\"MovieDetails_title__cUGs9\",\"genres\":\"MovieDetails_genres__Pnmgt\",\"add_info\":\"MovieDetails_add_info__Em791\",\"add_title\":\"MovieDetails_add_title__FAtDP\",\"add_link\":\"MovieDetails_add_link__CpZvg\"};","import { getMovieDetails } from \"API\";\nimport css from \"./MovieDetails.module.css\"\nimport React, { useEffect, useRef, useState, Suspense } from \"react\";\nimport { Link, Outlet, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { refs } from \"API\";\nimport { Loader } from \"components/Loader/Loader\";\n\n const MovieDetails = () => {\n    const [error, setError] = useState(false)\n    const [movie, setMovie] = useState(\"\")\n    const { movieId } = useParams()\n    const location = useLocation()\n    const navigate = useNavigate()\n    const goBackLocationRef = useRef(location.state?.from ?? '/movies')\n    \n    useEffect(() => {\n        if (!movieId) {\n            return\n        }\n        async function fetchMovie() {\n            setMovie(\"\")\n            setError(false)\n            try {\n                const movie = await getMovieDetails(movieId)\n                if (!movie) {\n                    alert('Opps! There are no movie for your request! Please try again!');\n                    return;\n                }\n                setMovie(movie)\n            } catch (error) { setError(error.response.data); } \n        }\n        fetchMovie()\n    }, [movieId])\n\n    const handleBack = () => { navigate(goBackLocationRef.current) }\n\n    const { poster_path, title, overview, genres, release_date, vote_average } = movie\n    const year = new Date(release_date).getFullYear();\n\n    return (\n        <div className={css.container}>\n            <button className={css.back_btn} type=\"button\" onClick={handleBack} ><span>&#8592;</span> Go back</button>\n            {error && <h1>{error}</h1>}\n            <div className={css.movie_card}>\n                <div className={css.imgbox}>\n                    <img className={css.img} src={\n                        poster_path ? `${refs.baseUrl}${poster_path}` : `${refs.defaultImg}`}\n                        alt={title}></img>\n                </div>\n                <div className={css.movie_info}>\n                    <h1 className={css.title}>{title} ({year})</h1>\n                    <p>User Score: {Math.round(vote_average * 10)}%</p>\n                    <h2>Overview:</h2>\n                    <p>{overview}</p>\n                    <h3 >Genres:</h3>\n                    <div className={css.genres}>\n                        {genres?.map((ganer, index) => (<p key={index}>{ganer.name}</p>))}\n                    </div>\n                </div>\n            </div>\n            <hr />\n            <div className={css.add_info}>\n                <h3 className={css.add_title}>Additional information:</h3>\n                <ul >\n                    <li><Link className={css.add_link} to=\"cast\">Cast</Link></li>\n                    <li><Link className={css.add_link} to=\"reviews\">Reviews</Link></li>\n                </ul>\n            </div>\n            <hr />\n            <Suspense fallback={<Loader/>}>\n                <Outlet />\n            </Suspense>\n            \n        </div>\n    )\n};\nexport default MovieDetails;"],"names":["axios","OPTIONS","method","options","language","headers","accept","Authorization","refs","baseUrl","defaultImg","getTodaysTrending","responce","data","getMovieDetails","movieId","movieDelails","getMoviesBySearch","query","moviesBySearch","getMovieCredits","moviesCredits","getMovieReviews","moviesReviews","useState","error","setError","movie","setMovie","useParams","location","useLocation","navigate","useNavigate","goBackLocationRef","useRef","state","from","useEffect","alert","response","fetchMovie","poster_path","title","overview","genres","release_date","vote_average","year","Date","getFullYear","className","css","type","onClick","current","src","alt","Math","round","map","ganer","index","name","to","Suspense","fallback","Loader"],"sourceRoot":""}