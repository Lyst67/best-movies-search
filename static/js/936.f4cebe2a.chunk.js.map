{"version":3,"file":"static/js/936.f4cebe2a.chunk.js","mappings":"6TAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CAAEC,SAAU,SACrBC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAGOC,EAAO,CAClBC,QAAS,mCACTC,WACE,+EAGSC,EAAiB,mCAAG,+FACzBR,EAAUF,EADe,SAERD,EAAAA,EAAAA,IAAA,qBAAgCG,GAFxB,cAEzBS,EAFyB,OAGzBC,EAAOD,EAASC,KAHS,kBAIxBA,GAJwB,2CAAH,qDAOjBC,EAAe,mCAAG,WAAMC,GAAN,kFACvBZ,EAAUF,EADa,UAEND,EAAAA,EAAAA,GAAM,SAAD,OAAUe,GAAWZ,GAFpB,cAEvBS,EAFuB,OAGvBI,EAAeJ,EAASC,KAHD,kBAItBG,GAJsB,2CAAH,sDAOfC,EAAiB,mCAAG,WAAMC,GAAN,kFACzBf,EAAUF,EADe,UAERD,EAAAA,EAAAA,GAAM,sBAAD,OAAuBkB,GAASf,GAF7B,cAEzBS,EAFyB,OAGzBO,EAAiBP,EAASC,KAHD,kBAIxBM,GAJwB,2CAAH,sDAOjBC,EAAe,mCAAG,WAAML,GAAN,kFACvBZ,EAAUF,EADa,UAEND,EAAAA,EAAAA,GAAM,SAAD,OAAUe,EAAV,aAA8BZ,GAF7B,cAEvBS,EAFuB,OAGvBS,EAAgBT,EAASC,KAHF,kBAItBQ,GAJsB,2CAAH,sDAOfC,EAAe,mCAAG,WAAMP,GAAN,kFACvBZ,EAAUF,EADa,UAEND,EAAAA,EAAAA,GAAM,SAAD,OAAUe,EAAV,aAA8BZ,GAF7B,cAEvBS,EAFuB,OAGvBW,EAAgBX,EAASC,KAHF,kBAItBU,GAJsB,2CAAH,qD,2EC9C5B,EAA4B,6BAA5B,EAAqE,6B,SCarE,EAXmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZC,GAAWC,EAAAA,EAAAA,MACjB,OACI,wBACKF,EAAOG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACf,OAAO,eAAIC,UAAWC,EAAf,UAAuC,SAAC,KAAD,CAAMD,UAAWC,EAAeC,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAApE,SAAiFI,KAArFD,EAC7C,KAIZ,C,sICZD,EAA4B,wBAA5B,EAA4D,oB,SCgC5D,EA3Ba,WACL,OAAsCO,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACR,8GAEmC7B,EAAAA,EAAAA,MAFnC,WAEsBE,EAFtB,QAG0B4B,QAAQC,OAHlC,uBAIwBC,MAAM,iEAJ9B,0BAOgBN,EAAexB,EAAK4B,SAPpC,kDAQ0BF,EAAS,KAAMK,SAAS/B,MARlD,2DADQ,uBAAC,WAAD,wBAWRgC,EACP,GAAE,KAGK,iBAAKf,UAAWC,EAAhB,WACQ,eAAID,UAAWC,EAAf,SAA0B,mBACzBO,IAAS,wBAAKA,KACf,SAACQ,EAAA,EAAD,CAAYtB,OAAQY,MAG3C,C","sources":["API.js","webpack://best-movies-search/./src/components/MoviesList/Movielist.module.css?3ec5","components/MoviesList/MoviesList.jsx","webpack://best-movies-search/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst OPTIONS = {\n  method: 'GET',\n  options: { language: 'en-US' },\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1OTI3MGJmODZhYjExZTBjY2FmN2YzOGVmMWQ5OWIyZCIsInN1YiI6IjY0YzI0OTY5MmYxYmUwMDE0ZWY2NGE1ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.p5RUI4QQa76RdjJg1YwJtQVcsEnpw3DEDCBEkEwrDLQ',\n  },\n};\nexport const refs = {\n  baseUrl: 'https://image.tmdb.org/t/p/w500/',\n  defaultImg:\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700',\n};\n\nexport const getTodaysTrending = async () => {\n  const options = OPTIONS;\n  const responce = await axios.get(`trending/movie/day`, options);\n  const data = responce.data;\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const options = OPTIONS;\n  const responce = await axios(`movie/${movieId}`, options);\n  const movieDelails = responce.data;\n  return movieDelails;\n};\n\nexport const getMoviesBySearch = async query => {\n  const options = OPTIONS;\n  const responce = await axios(`search/movie?query=${query}`, options);\n  const moviesBySearch = responce.data;\n  return moviesBySearch;\n};\n\nexport const getMovieCredits = async movieId => {\n  const options = OPTIONS;\n  const responce = await axios(`movie/${movieId}/credits?`, options);\n  const moviesCredits = responce.data;\n  return moviesCredits;\n};\n\nexport const getMovieReviews = async movieId => {\n  const options = OPTIONS;\n  const responce = await axios(`movie/${movieId}/reviews?`, options);\n  const moviesReviews = responce.data;\n  return moviesReviews;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list_item\":\"Movielist_list_item__WfAtn\",\"list_link\":\"Movielist_list_link__HhEdJ\"};","import { Link, useLocation } from \"react-router-dom\"\nimport css from './Movielist.module.css'\n\nconst MoviesList = ({ movies }) => {\n    const location = useLocation()\n    return (\n        <ul>\n            {movies.map(({ id, title }) => {\n                return <li className={css.list_item} key={id}><Link className={css.list_link} to={`/movies/${id}`} state={{ from: location }}>{title}</Link></li>\n            })}\n                    \n        </ul>\n    )\n};\nexport default MoviesList;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Home_container__w+u63\",\"title\":\"Home_title__L087v\"};","import { getTodaysTrending } from \"API\"\nimport MoviesList from \"components/MoviesList/MoviesList\"\nimport React, { useEffect, useState } from \"react\"\nimport css from './Home.module.css'\n\n\nconst Home = () => {\n        const [todayMovies, setTodayMovies] = useState([])\n        const [error, setError] = useState(false)\n        \n        useEffect(() => {\n                async function fetchMovies() {\n                        try {\n                                const data = await getTodaysTrending()\n                                if (!data.results.length) {\n                                        alert('Opps! There are no movies for your request! Please try again!');\n                                        return;\n                                }\n                                setTodayMovies(data.results)\n                        } catch (error) { setError(error.response.data); } \n                }\n                fetchMovies()\n        }, [])\n  \n        return (\n                <div className={css.container}>\n                        <h1 className={css.title}>Trending today</h1>\n                        {error && <h1>{error}</h1>}\n                        <MoviesList movies={todayMovies} />\n                </div>\n        )\n};\n\nexport default Home;"],"names":["axios","OPTIONS","method","options","language","headers","accept","Authorization","refs","baseUrl","defaultImg","getTodaysTrending","responce","data","getMovieDetails","movieId","movieDelails","getMoviesBySearch","query","moviesBySearch","getMovieCredits","moviesCredits","getMovieReviews","moviesReviews","movies","location","useLocation","map","id","title","className","css","to","state","from","useState","todayMovies","setTodayMovies","error","setError","useEffect","results","length","alert","response","fetchMovies","MoviesList"],"sourceRoot":""}