{"version":3,"file":"static/js/76.5d9a2c30.chunk.js","mappings":"4TAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CAAEC,SAAU,SACrBC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAGOC,EAAO,CAClBC,QAAS,mCACTC,WACE,+EAGSC,EAAiB,mCAAG,+FACzBR,EAAUF,EADe,SAERD,EAAAA,EAAAA,IAAA,qBAAgCG,GAFxB,cAEzBS,EAFyB,OAGzBC,EAAOD,EAASC,KAHS,kBAIxBA,GAJwB,2CAAH,qDAOjBC,EAAe,mCAAG,WAAMC,GAAN,kFACvBZ,EAAUF,EADa,UAEND,EAAAA,EAAAA,GAAM,SAAD,OAAUe,GAAWZ,GAFpB,cAEvBS,EAFuB,OAGvBI,EAAeJ,EAASC,KAHD,kBAItBG,GAJsB,2CAAH,sDAOfC,EAAiB,mCAAG,WAAMC,GAAN,kFACzBf,EAAUF,EADe,UAERD,EAAAA,EAAAA,GAAM,sBAAD,OAAuBkB,GAASf,GAF7B,cAEzBS,EAFyB,OAGzBO,EAAiBP,EAASC,KAHD,kBAIxBM,GAJwB,2CAAH,sDAOjBC,EAAe,mCAAG,WAAML,GAAN,kFACvBZ,EAAUF,EADa,UAEND,EAAAA,EAAAA,GAAM,SAAD,OAAUe,EAAV,aAA8BZ,GAF7B,cAEvBS,EAFuB,OAGvBS,EAAgBT,EAASC,KAHF,kBAItBQ,GAJsB,2CAAH,sDAOfC,EAAe,mCAAG,WAAMP,GAAN,kFACvBZ,EAAUF,EADa,UAEND,EAAAA,EAAAA,GAAM,SAAD,OAAUe,EAAV,aAA8BZ,GAF7B,cAEvBS,EAFuB,OAGvBW,EAAgBX,EAASC,KAHF,kBAItBU,GAJsB,2CAAH,qD,qIC9C5B,EAA4B,wBAA5B,EAAgE,wBAAhE,EAAoG,wBAApG,EAAsI,sBAAtI,EAAkK,kBAAlK,EAAiM,yB,SCuDjM,EAnDa,WACX,OAA0BC,EAAAA,EAAAA,WAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQb,GAAYc,EAAAA,EAAAA,MAAZd,QAmBR,OAjBAe,EAAAA,EAAAA,YAAU,WAAM,wCAId,2FACEF,EAAW,IACXF,GAAS,GAFX,mBAI0BN,EAAAA,EAAAA,IAAgBL,GAJ1C,OAIUY,EAJV,OAKIC,EAAWD,EAAQI,MALvB,gDAOIL,EAAS,KAAMM,SAASnB,MAP5B,0DAJc,sBACTE,GADS,mCAcdkB,EACD,GAAE,CAAClB,KAGF,iBAAKmB,UAAWC,EAAhB,UACGV,IAAS,wBAAKA,IACbE,EAAQS,QAGR,eAAIF,UAAWC,EAAf,SACGR,EAAQU,KAAI,WAAoCC,GAApC,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAvB,OACX,gBAAIP,UAAWC,EAAf,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBACED,UAAWC,EACXO,IACEH,EAAY,UACL/B,EAAAA,GAAAA,SADK,OACU+B,GADV,UAEL/B,EAAAA,GAAAA,YAETmC,IAAKH,OAGT,eAAIN,UAAWC,EAAf,SAAgCK,KAChC,yBAAG,cAAYC,OAbkBH,EADxB,OAHf,wBAAI,gDAwBX,C","sources":["API.js","webpack://best-movies-search/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst OPTIONS = {\n  method: 'GET',\n  options: { language: 'en-US' },\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1OTI3MGJmODZhYjExZTBjY2FmN2YzOGVmMWQ5OWIyZCIsInN1YiI6IjY0YzI0OTY5MmYxYmUwMDE0ZWY2NGE1ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.p5RUI4QQa76RdjJg1YwJtQVcsEnpw3DEDCBEkEwrDLQ',\n  },\n};\nexport const refs = {\n  baseUrl: 'https://image.tmdb.org/t/p/w500/',\n  defaultImg:\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700',\n};\n\nexport const getTodaysTrending = async () => {\n  const options = OPTIONS;\n  const responce = await axios.get(`trending/movie/day`, options);\n  const data = responce.data;\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const options = OPTIONS;\n  const responce = await axios(`movie/${movieId}`, options);\n  const movieDelails = responce.data;\n  return movieDelails;\n};\n\nexport const getMoviesBySearch = async query => {\n  const options = OPTIONS;\n  const responce = await axios(`search/movie?query=${query}`, options);\n  const moviesBySearch = responce.data;\n  return moviesBySearch;\n};\n\nexport const getMovieCredits = async movieId => {\n  const options = OPTIONS;\n  const responce = await axios(`movie/${movieId}/credits?`, options);\n  const moviesCredits = responce.data;\n  return moviesCredits;\n};\n\nexport const getMovieReviews = async movieId => {\n  const options = OPTIONS;\n  const responce = await axios(`movie/${movieId}/reviews?`, options);\n  const moviesReviews = responce.data;\n  return moviesReviews;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Cast_container__iz+ye\",\"cast_list\":\"Cast_cast_list__6yHmm\",\"cast_card\":\"Cast_cast_card__GVzCx\",\"img_box\":\"Cast_img_box__T5SIE\",\"img\":\"Cast_img__-isbW\",\"actor_name\":\"Cast_actor_name__8STVW\"};","import { getMovieCredits, refs } from 'API';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [error, setError] = useState(false);\n  const [credits, setCredits] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    async function fetchMovie() {\n      setCredits([]);\n      setError(false);\n      try {\n        const credits = await getMovieCredits(movieId);\n        setCredits(credits.cast);\n      } catch (error) {\n        setError(error.response.data);\n      }\n    }\n    fetchMovie();\n  }, [movieId]);\n\n  return (\n    <div className={css.container}>\n      {error && <h3>{error}</h3>}\n      {!credits.length ? (\n        <h3>We don't have any credits for this movie.</h3>\n      ) : (\n        <ul className={css.cast_list}>\n          {credits.map(({ profile_path, name, character }, index) => (\n            <li className={css.cast_card} key={index}>\n              <div className={css.img_box}>\n                <img\n                  className={css.img}\n                  src={\n                    profile_path\n                      ? `${refs.baseUrl}${profile_path}`\n                      : `${refs.defaultImg}`\n                  }\n                  alt={name}\n                ></img>\n              </div>\n              <h4 className={css.actor_name}>{name}</h4>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\nexport default Cast;\n"],"names":["axios","OPTIONS","method","options","language","headers","accept","Authorization","refs","baseUrl","defaultImg","getTodaysTrending","responce","data","getMovieDetails","movieId","movieDelails","getMoviesBySearch","query","moviesBySearch","getMovieCredits","moviesCredits","getMovieReviews","moviesReviews","useState","error","setError","credits","setCredits","useParams","useEffect","cast","response","fetchMovie","className","css","length","map","index","profile_path","name","character","src","alt"],"sourceRoot":""}